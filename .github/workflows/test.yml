name: Test
on: [push, pull_request]

jobs:
  test-unix:
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest, macos-latest]
    runs-on: ${{ matrix.os }}
    name: Test on ${{ matrix.os }}
    steps:
      - uses: actions/checkout@v4
      - name: Install tcpdump (Linux)
        if: matrix.os == 'ubuntu-latest'
        run: sudo apt-get install -y tcpdump
      - name: Install tcpdump (macOS)
        if: matrix.os == 'macos-latest'
        run: brew install tcpdump
      - name: Compile code (Linux)
        if: matrix.os == 'ubuntu-latest'
        run: gcc code/main.c -o main
      - name: Compile code (macOS)
        if: matrix.os == 'macos-latest'
        run: gcc -D__APPLE_USE_RFC_3542 code/main.c -o main
      - name: Run IPv4 test
        run: |
          sudo tcpdump -i any -n -v 'port 12345' &
          sudo ./main ipv4
      - name: Run IPv6 test
        run: |
          sudo tcpdump -i any -n -v 'port 12345' &
          sudo ./main ipv6
      - name: Run dual stack test
        run: |
          sudo tcpdump -i any -n -v 'port 12345' &
          sudo ./main dual

  test-windows:
    runs-on: windows-latest
    name: Test on Windows
    steps:
      - uses: actions/checkout@v4
      - name: Install Wireshark
        run: choco install -y wireshark
      - name: Setup Windows build environment
        uses: ilammy/msvc-dev-cmd@v1
      - name: Compile code
        run: cl code/main.c /Fe:main.exe ws2_32.lib
      - name: Run IPv4 test
        run: |
          "C:\Program Files\Wireshark\tshark.exe" -i any -f "port 12345" -V &
          ./main.exe ipv4
      - name: Run IPv6 test
        run: |
          "C:\Program Files\Wireshark\tshark.exe" -i any -f "port 12345" -V &
          ./main.exe ipv6
      - name: Run dual stack test
        run: |
          "C:\Program Files\Wireshark\tshark.exe" -i any -f "port 12345" -V &
          ./main.exe dual
